import numpy as np
import matplotlib.pyplot as plt
from celluloid import Camera

# parameters
xsize=100
dx=1.0
dt=0.5
u=1.0 # horizontal velocity
time=40.
nsteps=int(time/dt)

x=np.linspace(0,xsize,int(xsize/dx)+1)

# initial function
yinit=np.sin(2*np.pi*x/(xsize+1))
#yinit=(x>xsize/2)*1
y0=yinit


# dy/dt+u dy/dx=0

fig0,ax0=plt.subplots()
camera = Camera(fig0)

# solve with forward in time and centered in space
for it in range(nsteps):
    y1=y0+dt*u*(np.roll(y0,1)-np.roll(y0,-1))/(2*dx)
    y0=y1
    ytrue=np.roll(yinit,int(it*dt*u))
    ax0.plot(x,y1,color="blue",label="Numerical FTCS")
    ax0.plot(x,ytrue,color="red",linestyle="-",label="True Solution")
    ax0.legend(loc="upper left")
    camera.snap()
    
animation = camera.animate()
animation.save('celluloid_minimal.gif', writer = 'imagemagick')
    
# true answer
    
fig1,ax1=plt.subplots()
ax1.plot(x,yinit,label="initial conditions")
ax1.plot(x,y1,label="Numerical FTCS")
ax1.plot(x,ytrue,label="True Solution")
ax1.legend()
plt.savefig("fig.pdf")


